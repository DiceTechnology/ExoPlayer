// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: WidevineCencHeader.proto

package com.google.android.exoplayer2.endeavor;

public final class WidevineCencHeaderParser {
  private WidevineCencHeaderParser() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface WidevineCencHeaderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:WidevineCencHeader)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>.WidevineCencHeader.Algorithm algorithm = 1;</code>
     * @return The enum numeric value on the wire for algorithm.
     */
    int getAlgorithmValue();
    /**
     * <code>.WidevineCencHeader.Algorithm algorithm = 1;</code>
     * @return The algorithm.
     */
    com.google.android.exoplayer2.endeavor.WidevineCencHeaderParser.WidevineCencHeader.Algorithm getAlgorithm();

    /**
     * <code>repeated bytes key_id = 2;</code>
     * @return A list containing the keyId.
     */
    java.util.List<com.google.protobuf.ByteString> getKeyIdList();
    /**
     * <code>repeated bytes key_id = 2;</code>
     * @return The count of keyId.
     */
    int getKeyIdCount();
    /**
     * <code>repeated bytes key_id = 2;</code>
     * @param index The index of the element to return.
     * @return The keyId at the given index.
     */
    com.google.protobuf.ByteString getKeyId(int index);

    /**
     * <pre>
     * Content provider name.
     * </pre>
     *
     * <code>string provider = 3;</code>
     * @return The provider.
     */
    java.lang.String getProvider();
    /**
     * <pre>
     * Content provider name.
     * </pre>
     *
     * <code>string provider = 3;</code>
     * @return The bytes for provider.
     */
    com.google.protobuf.ByteString
        getProviderBytes();

    /**
     * <pre>
     * A content identifier, specificed by content provider.
     * </pre>
     *
     * <code>bytes content_id = 4;</code>
     * @return The contentId.
     */
    com.google.protobuf.ByteString getContentId();

    /**
     * <pre>
     * Track type. Acceptable values are SD, HD, and AUDIO. Used to
     * differentiate content keys used by an asset.
     * </pre>
     *
     * <code>string track_type_deprecated = 5;</code>
     * @return The trackTypeDeprecated.
     */
    java.lang.String getTrackTypeDeprecated();
    /**
     * <pre>
     * Track type. Acceptable values are SD, HD, and AUDIO. Used to
     * differentiate content keys used by an asset.
     * </pre>
     *
     * <code>string track_type_deprecated = 5;</code>
     * @return The bytes for trackTypeDeprecated.
     */
    com.google.protobuf.ByteString
        getTrackTypeDeprecatedBytes();

    /**
     * <pre>
     * The name of a registered policy to be used for this asset.
     * </pre>
     *
     * <code>string policy = 6;</code>
     * @return The policy.
     */
    java.lang.String getPolicy();
    /**
     * <pre>
     * The name of a registered policy to be used for this asset.
     * </pre>
     *
     * <code>string policy = 6;</code>
     * @return The bytes for policy.
     */
    com.google.protobuf.ByteString
        getPolicyBytes();

    /**
     * <pre>
     * Crypto period index, for media using key rotation.
     * </pre>
     *
     * <code>uint32 crypto_period_index = 7;</code>
     * @return The cryptoPeriodIndex.
     */
    int getCryptoPeriodIndex();

    /**
     * <pre>
     * Optional protected context for group content. The grouped_license is a
     * serialized SignedMessage.
     * </pre>
     *
     * <code>bytes grouped_license = 8;</code>
     * @return The groupedLicense.
     */
    com.google.protobuf.ByteString getGroupedLicense();

    /**
     * <pre>
     * Protection scheme identifying the encryption algorithm.
     * Represented as one of the following 4CC values:
     * 'cenc' (AES-CTR), 'cbc1' (AES-CBC),
     * 'cens' (AES-CTR subsample), 'cbcs' (AES-CBC subsample).
     * </pre>
     *
     * <code>uint32 protection_scheme = 9;</code>
     * @return The protectionScheme.
     */
    int getProtectionScheme();

    /**
     * <pre>
     * Optional. For media using key rotation, this represents the duration
     * of each crypto period in seconds.
     * </pre>
     *
     * <code>uint32 crypto_period_seconds = 10;</code>
     * @return The cryptoPeriodSeconds.
     */
    int getCryptoPeriodSeconds();
  }
  /**
   * Protobuf type {@code WidevineCencHeader}
   */
  public  static final class WidevineCencHeader extends
      com.google.protobuf.GeneratedMessageLite<
          WidevineCencHeader, WidevineCencHeader.Builder> implements
      // @@protoc_insertion_point(message_implements:WidevineCencHeader)
      WidevineCencHeaderOrBuilder {
    private WidevineCencHeader() {
      keyId_ = emptyProtobufList();
      provider_ = "";
      contentId_ = com.google.protobuf.ByteString.EMPTY;
      trackTypeDeprecated_ = "";
      policy_ = "";
      groupedLicense_ = com.google.protobuf.ByteString.EMPTY;
    }
    /**
     * Protobuf enum {@code WidevineCencHeader.Algorithm}
     */
    public enum Algorithm
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>UNENCRYPTED = 0;</code>
       */
      UNENCRYPTED(0),
      /**
       * <code>AESCTR = 1;</code>
       */
      AESCTR(1),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>UNENCRYPTED = 0;</code>
       */
      public static final int UNENCRYPTED_VALUE = 0;
      /**
       * <code>AESCTR = 1;</code>
       */
      public static final int AESCTR_VALUE = 1;


      @java.lang.Override
      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Algorithm valueOf(int value) {
        return forNumber(value);
      }

      public static Algorithm forNumber(int value) {
        switch (value) {
          case 0: return UNENCRYPTED;
          case 1: return AESCTR;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Algorithm>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Algorithm> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Algorithm>() {
              @java.lang.Override
              public Algorithm findValueByNumber(int number) {
                return Algorithm.forNumber(number);
              }
            };

      public static com.google.protobuf.Internal.EnumVerifier 
          internalGetVerifier() {
        return AlgorithmVerifier.INSTANCE;
      }

      private static final class AlgorithmVerifier implements 
           com.google.protobuf.Internal.EnumVerifier { 
              static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new AlgorithmVerifier();
              @java.lang.Override
              public boolean isInRange(int number) {
                return Algorithm.forNumber(number) != null;
              }
            };

      private final int value;

      private Algorithm(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:WidevineCencHeader.Algorithm)
    }

    public static final int ALGORITHM_FIELD_NUMBER = 1;
    private int algorithm_;
    /**
     * <code>.WidevineCencHeader.Algorithm algorithm = 1;</code>
     * @return The enum numeric value on the wire for algorithm.
     */
    @java.lang.Override
    public int getAlgorithmValue() {
      return algorithm_;
    }
    /**
     * <code>.WidevineCencHeader.Algorithm algorithm = 1;</code>
     * @return The algorithm.
     */
    @java.lang.Override
    public com.google.android.exoplayer2.endeavor.WidevineCencHeaderParser.WidevineCencHeader.Algorithm getAlgorithm() {
      com.google.android.exoplayer2.endeavor.WidevineCencHeaderParser.WidevineCencHeader.Algorithm result = com.google.android.exoplayer2.endeavor.WidevineCencHeaderParser.WidevineCencHeader.Algorithm.forNumber(algorithm_);
      return result == null ? com.google.android.exoplayer2.endeavor.WidevineCencHeaderParser.WidevineCencHeader.Algorithm.UNRECOGNIZED : result;
    }
    /**
     * <code>.WidevineCencHeader.Algorithm algorithm = 1;</code>
     * @param value The enum numeric value on the wire for algorithm to set.
     */
    private void setAlgorithmValue(int value) {
        algorithm_ = value;
    }
    /**
     * <code>.WidevineCencHeader.Algorithm algorithm = 1;</code>
     * @param value The algorithm to set.
     */
    private void setAlgorithm(com.google.android.exoplayer2.endeavor.WidevineCencHeaderParser.WidevineCencHeader.Algorithm value) {
      algorithm_ = value.getNumber();
      
    }
    /**
     * <code>.WidevineCencHeader.Algorithm algorithm = 1;</code>
     */
    private void clearAlgorithm() {
      
      algorithm_ = 0;
    }

    public static final int KEY_ID_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> keyId_;
    /**
     * <code>repeated bytes key_id = 2;</code>
     * @return A list containing the keyId.
     */
    @java.lang.Override
    public java.util.List<com.google.protobuf.ByteString>
        getKeyIdList() {
      return keyId_;
    }
    /**
     * <code>repeated bytes key_id = 2;</code>
     * @return The count of keyId.
     */
    @java.lang.Override
    public int getKeyIdCount() {
      return keyId_.size();
    }
    /**
     * <code>repeated bytes key_id = 2;</code>
     * @param index The index of the element to return.
     * @return The keyId at the given index.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getKeyId(int index) {
      return keyId_.get(index);
    }
    private void ensureKeyIdIsMutable() {
      if (!keyId_.isModifiable()) {
        keyId_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(keyId_);
       }
    }
    /**
     * <code>repeated bytes key_id = 2;</code>
     * @param index The index to set the value at.
     * @param value The keyId to set.
     */
    private void setKeyId(
        int index, com.google.protobuf.ByteString value) {
      value.getClass();
  ensureKeyIdIsMutable();
      keyId_.set(index, value);
    }
    /**
     * <code>repeated bytes key_id = 2;</code>
     * @param value The keyId to add.
     */
    private void addKeyId(com.google.protobuf.ByteString value) {
      value.getClass();
  ensureKeyIdIsMutable();
      keyId_.add(value);
    }
    /**
     * <code>repeated bytes key_id = 2;</code>
     * @param values The keyId to add.
     */
    private void addAllKeyId(
        java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
      ensureKeyIdIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, keyId_);
    }
    /**
     * <code>repeated bytes key_id = 2;</code>
     */
    private void clearKeyId() {
      keyId_ = emptyProtobufList();
    }

    public static final int PROVIDER_FIELD_NUMBER = 3;
    private java.lang.String provider_;
    /**
     * <pre>
     * Content provider name.
     * </pre>
     *
     * <code>string provider = 3;</code>
     * @return The provider.
     */
    @java.lang.Override
    public java.lang.String getProvider() {
      return provider_;
    }
    /**
     * <pre>
     * Content provider name.
     * </pre>
     *
     * <code>string provider = 3;</code>
     * @return The bytes for provider.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getProviderBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(provider_);
    }
    /**
     * <pre>
     * Content provider name.
     * </pre>
     *
     * <code>string provider = 3;</code>
     * @param value The provider to set.
     */
    private void setProvider(
        java.lang.String value) {
      value.getClass();
  
      provider_ = value;
    }
    /**
     * <pre>
     * Content provider name.
     * </pre>
     *
     * <code>string provider = 3;</code>
     */
    private void clearProvider() {
      
      provider_ = getDefaultInstance().getProvider();
    }
    /**
     * <pre>
     * Content provider name.
     * </pre>
     *
     * <code>string provider = 3;</code>
     * @param value The bytes for provider to set.
     */
    private void setProviderBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      provider_ = value.toStringUtf8();
      
    }

    public static final int CONTENT_ID_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString contentId_;
    /**
     * <pre>
     * A content identifier, specificed by content provider.
     * </pre>
     *
     * <code>bytes content_id = 4;</code>
     * @return The contentId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getContentId() {
      return contentId_;
    }
    /**
     * <pre>
     * A content identifier, specificed by content provider.
     * </pre>
     *
     * <code>bytes content_id = 4;</code>
     * @param value The contentId to set.
     */
    private void setContentId(com.google.protobuf.ByteString value) {
      value.getClass();
  
      contentId_ = value;
    }
    /**
     * <pre>
     * A content identifier, specificed by content provider.
     * </pre>
     *
     * <code>bytes content_id = 4;</code>
     */
    private void clearContentId() {
      
      contentId_ = getDefaultInstance().getContentId();
    }

    public static final int TRACK_TYPE_DEPRECATED_FIELD_NUMBER = 5;
    private java.lang.String trackTypeDeprecated_;
    /**
     * <pre>
     * Track type. Acceptable values are SD, HD, and AUDIO. Used to
     * differentiate content keys used by an asset.
     * </pre>
     *
     * <code>string track_type_deprecated = 5;</code>
     * @return The trackTypeDeprecated.
     */
    @java.lang.Override
    public java.lang.String getTrackTypeDeprecated() {
      return trackTypeDeprecated_;
    }
    /**
     * <pre>
     * Track type. Acceptable values are SD, HD, and AUDIO. Used to
     * differentiate content keys used by an asset.
     * </pre>
     *
     * <code>string track_type_deprecated = 5;</code>
     * @return The bytes for trackTypeDeprecated.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTrackTypeDeprecatedBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(trackTypeDeprecated_);
    }
    /**
     * <pre>
     * Track type. Acceptable values are SD, HD, and AUDIO. Used to
     * differentiate content keys used by an asset.
     * </pre>
     *
     * <code>string track_type_deprecated = 5;</code>
     * @param value The trackTypeDeprecated to set.
     */
    private void setTrackTypeDeprecated(
        java.lang.String value) {
      value.getClass();
  
      trackTypeDeprecated_ = value;
    }
    /**
     * <pre>
     * Track type. Acceptable values are SD, HD, and AUDIO. Used to
     * differentiate content keys used by an asset.
     * </pre>
     *
     * <code>string track_type_deprecated = 5;</code>
     */
    private void clearTrackTypeDeprecated() {
      
      trackTypeDeprecated_ = getDefaultInstance().getTrackTypeDeprecated();
    }
    /**
     * <pre>
     * Track type. Acceptable values are SD, HD, and AUDIO. Used to
     * differentiate content keys used by an asset.
     * </pre>
     *
     * <code>string track_type_deprecated = 5;</code>
     * @param value The bytes for trackTypeDeprecated to set.
     */
    private void setTrackTypeDeprecatedBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      trackTypeDeprecated_ = value.toStringUtf8();
      
    }

    public static final int POLICY_FIELD_NUMBER = 6;
    private java.lang.String policy_;
    /**
     * <pre>
     * The name of a registered policy to be used for this asset.
     * </pre>
     *
     * <code>string policy = 6;</code>
     * @return The policy.
     */
    @java.lang.Override
    public java.lang.String getPolicy() {
      return policy_;
    }
    /**
     * <pre>
     * The name of a registered policy to be used for this asset.
     * </pre>
     *
     * <code>string policy = 6;</code>
     * @return The bytes for policy.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPolicyBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(policy_);
    }
    /**
     * <pre>
     * The name of a registered policy to be used for this asset.
     * </pre>
     *
     * <code>string policy = 6;</code>
     * @param value The policy to set.
     */
    private void setPolicy(
        java.lang.String value) {
      value.getClass();
  
      policy_ = value;
    }
    /**
     * <pre>
     * The name of a registered policy to be used for this asset.
     * </pre>
     *
     * <code>string policy = 6;</code>
     */
    private void clearPolicy() {
      
      policy_ = getDefaultInstance().getPolicy();
    }
    /**
     * <pre>
     * The name of a registered policy to be used for this asset.
     * </pre>
     *
     * <code>string policy = 6;</code>
     * @param value The bytes for policy to set.
     */
    private void setPolicyBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      policy_ = value.toStringUtf8();
      
    }

    public static final int CRYPTO_PERIOD_INDEX_FIELD_NUMBER = 7;
    private int cryptoPeriodIndex_;
    /**
     * <pre>
     * Crypto period index, for media using key rotation.
     * </pre>
     *
     * <code>uint32 crypto_period_index = 7;</code>
     * @return The cryptoPeriodIndex.
     */
    @java.lang.Override
    public int getCryptoPeriodIndex() {
      return cryptoPeriodIndex_;
    }
    /**
     * <pre>
     * Crypto period index, for media using key rotation.
     * </pre>
     *
     * <code>uint32 crypto_period_index = 7;</code>
     * @param value The cryptoPeriodIndex to set.
     */
    private void setCryptoPeriodIndex(int value) {
      
      cryptoPeriodIndex_ = value;
    }
    /**
     * <pre>
     * Crypto period index, for media using key rotation.
     * </pre>
     *
     * <code>uint32 crypto_period_index = 7;</code>
     */
    private void clearCryptoPeriodIndex() {
      
      cryptoPeriodIndex_ = 0;
    }

    public static final int GROUPED_LICENSE_FIELD_NUMBER = 8;
    private com.google.protobuf.ByteString groupedLicense_;
    /**
     * <pre>
     * Optional protected context for group content. The grouped_license is a
     * serialized SignedMessage.
     * </pre>
     *
     * <code>bytes grouped_license = 8;</code>
     * @return The groupedLicense.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getGroupedLicense() {
      return groupedLicense_;
    }
    /**
     * <pre>
     * Optional protected context for group content. The grouped_license is a
     * serialized SignedMessage.
     * </pre>
     *
     * <code>bytes grouped_license = 8;</code>
     * @param value The groupedLicense to set.
     */
    private void setGroupedLicense(com.google.protobuf.ByteString value) {
      value.getClass();
  
      groupedLicense_ = value;
    }
    /**
     * <pre>
     * Optional protected context for group content. The grouped_license is a
     * serialized SignedMessage.
     * </pre>
     *
     * <code>bytes grouped_license = 8;</code>
     */
    private void clearGroupedLicense() {
      
      groupedLicense_ = getDefaultInstance().getGroupedLicense();
    }

    public static final int PROTECTION_SCHEME_FIELD_NUMBER = 9;
    private int protectionScheme_;
    /**
     * <pre>
     * Protection scheme identifying the encryption algorithm.
     * Represented as one of the following 4CC values:
     * 'cenc' (AES-CTR), 'cbc1' (AES-CBC),
     * 'cens' (AES-CTR subsample), 'cbcs' (AES-CBC subsample).
     * </pre>
     *
     * <code>uint32 protection_scheme = 9;</code>
     * @return The protectionScheme.
     */
    @java.lang.Override
    public int getProtectionScheme() {
      return protectionScheme_;
    }
    /**
     * <pre>
     * Protection scheme identifying the encryption algorithm.
     * Represented as one of the following 4CC values:
     * 'cenc' (AES-CTR), 'cbc1' (AES-CBC),
     * 'cens' (AES-CTR subsample), 'cbcs' (AES-CBC subsample).
     * </pre>
     *
     * <code>uint32 protection_scheme = 9;</code>
     * @param value The protectionScheme to set.
     */
    private void setProtectionScheme(int value) {
      
      protectionScheme_ = value;
    }
    /**
     * <pre>
     * Protection scheme identifying the encryption algorithm.
     * Represented as one of the following 4CC values:
     * 'cenc' (AES-CTR), 'cbc1' (AES-CBC),
     * 'cens' (AES-CTR subsample), 'cbcs' (AES-CBC subsample).
     * </pre>
     *
     * <code>uint32 protection_scheme = 9;</code>
     */
    private void clearProtectionScheme() {
      
      protectionScheme_ = 0;
    }

    public static final int CRYPTO_PERIOD_SECONDS_FIELD_NUMBER = 10;
    private int cryptoPeriodSeconds_;
    /**
     * <pre>
     * Optional. For media using key rotation, this represents the duration
     * of each crypto period in seconds.
     * </pre>
     *
     * <code>uint32 crypto_period_seconds = 10;</code>
     * @return The cryptoPeriodSeconds.
     */
    @java.lang.Override
    public int getCryptoPeriodSeconds() {
      return cryptoPeriodSeconds_;
    }
    /**
     * <pre>
     * Optional. For media using key rotation, this represents the duration
     * of each crypto period in seconds.
     * </pre>
     *
     * <code>uint32 crypto_period_seconds = 10;</code>
     * @param value The cryptoPeriodSeconds to set.
     */
    private void setCryptoPeriodSeconds(int value) {
      
      cryptoPeriodSeconds_ = value;
    }
    /**
     * <pre>
     * Optional. For media using key rotation, this represents the duration
     * of each crypto period in seconds.
     * </pre>
     *
     * <code>uint32 crypto_period_seconds = 10;</code>
     */
    private void clearCryptoPeriodSeconds() {
      
      cryptoPeriodSeconds_ = 0;
    }

    public static com.google.android.exoplayer2.endeavor.WidevineCencHeaderParser.WidevineCencHeader parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.android.exoplayer2.endeavor.WidevineCencHeaderParser.WidevineCencHeader parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.android.exoplayer2.endeavor.WidevineCencHeaderParser.WidevineCencHeader parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.android.exoplayer2.endeavor.WidevineCencHeaderParser.WidevineCencHeader parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.android.exoplayer2.endeavor.WidevineCencHeaderParser.WidevineCencHeader parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.android.exoplayer2.endeavor.WidevineCencHeaderParser.WidevineCencHeader parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.android.exoplayer2.endeavor.WidevineCencHeaderParser.WidevineCencHeader parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.android.exoplayer2.endeavor.WidevineCencHeaderParser.WidevineCencHeader parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.android.exoplayer2.endeavor.WidevineCencHeaderParser.WidevineCencHeader parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.google.android.exoplayer2.endeavor.WidevineCencHeaderParser.WidevineCencHeader parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.android.exoplayer2.endeavor.WidevineCencHeaderParser.WidevineCencHeader parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.android.exoplayer2.endeavor.WidevineCencHeaderParser.WidevineCencHeader parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(com.google.android.exoplayer2.endeavor.WidevineCencHeaderParser.WidevineCencHeader prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code WidevineCencHeader}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.android.exoplayer2.endeavor.WidevineCencHeaderParser.WidevineCencHeader, Builder> implements
        // @@protoc_insertion_point(builder_implements:WidevineCencHeader)
        com.google.android.exoplayer2.endeavor.WidevineCencHeaderParser.WidevineCencHeaderOrBuilder {
      // Construct using com.google.android.exoplayer2.endeavor.WidevineCencHeaderParser.WidevineCencHeader.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>.WidevineCencHeader.Algorithm algorithm = 1;</code>
       * @return The enum numeric value on the wire for algorithm.
       */
      @java.lang.Override
      public int getAlgorithmValue() {
        return instance.getAlgorithmValue();
      }
      /**
       * <code>.WidevineCencHeader.Algorithm algorithm = 1;</code>
       * @param value The algorithm to set.
       * @return This builder for chaining.
       */
      public Builder setAlgorithmValue(int value) {
        copyOnWrite();
        instance.setAlgorithmValue(value);
        return this;
      }
      /**
       * <code>.WidevineCencHeader.Algorithm algorithm = 1;</code>
       * @return The algorithm.
       */
      @java.lang.Override
      public com.google.android.exoplayer2.endeavor.WidevineCencHeaderParser.WidevineCencHeader.Algorithm getAlgorithm() {
        return instance.getAlgorithm();
      }
      /**
       * <code>.WidevineCencHeader.Algorithm algorithm = 1;</code>
       * @param value The enum numeric value on the wire for algorithm to set.
       * @return This builder for chaining.
       */
      public Builder setAlgorithm(com.google.android.exoplayer2.endeavor.WidevineCencHeaderParser.WidevineCencHeader.Algorithm value) {
        copyOnWrite();
        instance.setAlgorithm(value);
        return this;
      }
      /**
       * <code>.WidevineCencHeader.Algorithm algorithm = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAlgorithm() {
        copyOnWrite();
        instance.clearAlgorithm();
        return this;
      }

      /**
       * <code>repeated bytes key_id = 2;</code>
       * @return A list containing the keyId.
       */
      @java.lang.Override
      public java.util.List<com.google.protobuf.ByteString>
          getKeyIdList() {
        return java.util.Collections.unmodifiableList(
            instance.getKeyIdList());
      }
      /**
       * <code>repeated bytes key_id = 2;</code>
       * @return The count of keyId.
       */
      @java.lang.Override
      public int getKeyIdCount() {
        return instance.getKeyIdCount();
      }
      /**
       * <code>repeated bytes key_id = 2;</code>
       * @param index The index of the element to return.
       * @return The keyId at the given index.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getKeyId(int index) {
        return instance.getKeyId(index);
      }
      /**
       * <code>repeated bytes key_id = 2;</code>
       * @param value The keyId to set.
       * @return This builder for chaining.
       */
      public Builder setKeyId(
          int index, com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setKeyId(index, value);
        return this;
      }
      /**
       * <code>repeated bytes key_id = 2;</code>
       * @param value The keyId to add.
       * @return This builder for chaining.
       */
      public Builder addKeyId(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.addKeyId(value);
        return this;
      }
      /**
       * <code>repeated bytes key_id = 2;</code>
       * @param values The keyId to add.
       * @return This builder for chaining.
       */
      public Builder addAllKeyId(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        copyOnWrite();
        instance.addAllKeyId(values);
        return this;
      }
      /**
       * <code>repeated bytes key_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearKeyId() {
        copyOnWrite();
        instance.clearKeyId();
        return this;
      }

      /**
       * <pre>
       * Content provider name.
       * </pre>
       *
       * <code>string provider = 3;</code>
       * @return The provider.
       */
      @java.lang.Override
      public java.lang.String getProvider() {
        return instance.getProvider();
      }
      /**
       * <pre>
       * Content provider name.
       * </pre>
       *
       * <code>string provider = 3;</code>
       * @return The bytes for provider.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getProviderBytes() {
        return instance.getProviderBytes();
      }
      /**
       * <pre>
       * Content provider name.
       * </pre>
       *
       * <code>string provider = 3;</code>
       * @param value The provider to set.
       * @return This builder for chaining.
       */
      public Builder setProvider(
          java.lang.String value) {
        copyOnWrite();
        instance.setProvider(value);
        return this;
      }
      /**
       * <pre>
       * Content provider name.
       * </pre>
       *
       * <code>string provider = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearProvider() {
        copyOnWrite();
        instance.clearProvider();
        return this;
      }
      /**
       * <pre>
       * Content provider name.
       * </pre>
       *
       * <code>string provider = 3;</code>
       * @param value The bytes for provider to set.
       * @return This builder for chaining.
       */
      public Builder setProviderBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setProviderBytes(value);
        return this;
      }

      /**
       * <pre>
       * A content identifier, specificed by content provider.
       * </pre>
       *
       * <code>bytes content_id = 4;</code>
       * @return The contentId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getContentId() {
        return instance.getContentId();
      }
      /**
       * <pre>
       * A content identifier, specificed by content provider.
       * </pre>
       *
       * <code>bytes content_id = 4;</code>
       * @param value The contentId to set.
       * @return This builder for chaining.
       */
      public Builder setContentId(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setContentId(value);
        return this;
      }
      /**
       * <pre>
       * A content identifier, specificed by content provider.
       * </pre>
       *
       * <code>bytes content_id = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearContentId() {
        copyOnWrite();
        instance.clearContentId();
        return this;
      }

      /**
       * <pre>
       * Track type. Acceptable values are SD, HD, and AUDIO. Used to
       * differentiate content keys used by an asset.
       * </pre>
       *
       * <code>string track_type_deprecated = 5;</code>
       * @return The trackTypeDeprecated.
       */
      @java.lang.Override
      public java.lang.String getTrackTypeDeprecated() {
        return instance.getTrackTypeDeprecated();
      }
      /**
       * <pre>
       * Track type. Acceptable values are SD, HD, and AUDIO. Used to
       * differentiate content keys used by an asset.
       * </pre>
       *
       * <code>string track_type_deprecated = 5;</code>
       * @return The bytes for trackTypeDeprecated.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getTrackTypeDeprecatedBytes() {
        return instance.getTrackTypeDeprecatedBytes();
      }
      /**
       * <pre>
       * Track type. Acceptable values are SD, HD, and AUDIO. Used to
       * differentiate content keys used by an asset.
       * </pre>
       *
       * <code>string track_type_deprecated = 5;</code>
       * @param value The trackTypeDeprecated to set.
       * @return This builder for chaining.
       */
      public Builder setTrackTypeDeprecated(
          java.lang.String value) {
        copyOnWrite();
        instance.setTrackTypeDeprecated(value);
        return this;
      }
      /**
       * <pre>
       * Track type. Acceptable values are SD, HD, and AUDIO. Used to
       * differentiate content keys used by an asset.
       * </pre>
       *
       * <code>string track_type_deprecated = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearTrackTypeDeprecated() {
        copyOnWrite();
        instance.clearTrackTypeDeprecated();
        return this;
      }
      /**
       * <pre>
       * Track type. Acceptable values are SD, HD, and AUDIO. Used to
       * differentiate content keys used by an asset.
       * </pre>
       *
       * <code>string track_type_deprecated = 5;</code>
       * @param value The bytes for trackTypeDeprecated to set.
       * @return This builder for chaining.
       */
      public Builder setTrackTypeDeprecatedBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setTrackTypeDeprecatedBytes(value);
        return this;
      }

      /**
       * <pre>
       * The name of a registered policy to be used for this asset.
       * </pre>
       *
       * <code>string policy = 6;</code>
       * @return The policy.
       */
      @java.lang.Override
      public java.lang.String getPolicy() {
        return instance.getPolicy();
      }
      /**
       * <pre>
       * The name of a registered policy to be used for this asset.
       * </pre>
       *
       * <code>string policy = 6;</code>
       * @return The bytes for policy.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getPolicyBytes() {
        return instance.getPolicyBytes();
      }
      /**
       * <pre>
       * The name of a registered policy to be used for this asset.
       * </pre>
       *
       * <code>string policy = 6;</code>
       * @param value The policy to set.
       * @return This builder for chaining.
       */
      public Builder setPolicy(
          java.lang.String value) {
        copyOnWrite();
        instance.setPolicy(value);
        return this;
      }
      /**
       * <pre>
       * The name of a registered policy to be used for this asset.
       * </pre>
       *
       * <code>string policy = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearPolicy() {
        copyOnWrite();
        instance.clearPolicy();
        return this;
      }
      /**
       * <pre>
       * The name of a registered policy to be used for this asset.
       * </pre>
       *
       * <code>string policy = 6;</code>
       * @param value The bytes for policy to set.
       * @return This builder for chaining.
       */
      public Builder setPolicyBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPolicyBytes(value);
        return this;
      }

      /**
       * <pre>
       * Crypto period index, for media using key rotation.
       * </pre>
       *
       * <code>uint32 crypto_period_index = 7;</code>
       * @return The cryptoPeriodIndex.
       */
      @java.lang.Override
      public int getCryptoPeriodIndex() {
        return instance.getCryptoPeriodIndex();
      }
      /**
       * <pre>
       * Crypto period index, for media using key rotation.
       * </pre>
       *
       * <code>uint32 crypto_period_index = 7;</code>
       * @param value The cryptoPeriodIndex to set.
       * @return This builder for chaining.
       */
      public Builder setCryptoPeriodIndex(int value) {
        copyOnWrite();
        instance.setCryptoPeriodIndex(value);
        return this;
      }
      /**
       * <pre>
       * Crypto period index, for media using key rotation.
       * </pre>
       *
       * <code>uint32 crypto_period_index = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearCryptoPeriodIndex() {
        copyOnWrite();
        instance.clearCryptoPeriodIndex();
        return this;
      }

      /**
       * <pre>
       * Optional protected context for group content. The grouped_license is a
       * serialized SignedMessage.
       * </pre>
       *
       * <code>bytes grouped_license = 8;</code>
       * @return The groupedLicense.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getGroupedLicense() {
        return instance.getGroupedLicense();
      }
      /**
       * <pre>
       * Optional protected context for group content. The grouped_license is a
       * serialized SignedMessage.
       * </pre>
       *
       * <code>bytes grouped_license = 8;</code>
       * @param value The groupedLicense to set.
       * @return This builder for chaining.
       */
      public Builder setGroupedLicense(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setGroupedLicense(value);
        return this;
      }
      /**
       * <pre>
       * Optional protected context for group content. The grouped_license is a
       * serialized SignedMessage.
       * </pre>
       *
       * <code>bytes grouped_license = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearGroupedLicense() {
        copyOnWrite();
        instance.clearGroupedLicense();
        return this;
      }

      /**
       * <pre>
       * Protection scheme identifying the encryption algorithm.
       * Represented as one of the following 4CC values:
       * 'cenc' (AES-CTR), 'cbc1' (AES-CBC),
       * 'cens' (AES-CTR subsample), 'cbcs' (AES-CBC subsample).
       * </pre>
       *
       * <code>uint32 protection_scheme = 9;</code>
       * @return The protectionScheme.
       */
      @java.lang.Override
      public int getProtectionScheme() {
        return instance.getProtectionScheme();
      }
      /**
       * <pre>
       * Protection scheme identifying the encryption algorithm.
       * Represented as one of the following 4CC values:
       * 'cenc' (AES-CTR), 'cbc1' (AES-CBC),
       * 'cens' (AES-CTR subsample), 'cbcs' (AES-CBC subsample).
       * </pre>
       *
       * <code>uint32 protection_scheme = 9;</code>
       * @param value The protectionScheme to set.
       * @return This builder for chaining.
       */
      public Builder setProtectionScheme(int value) {
        copyOnWrite();
        instance.setProtectionScheme(value);
        return this;
      }
      /**
       * <pre>
       * Protection scheme identifying the encryption algorithm.
       * Represented as one of the following 4CC values:
       * 'cenc' (AES-CTR), 'cbc1' (AES-CBC),
       * 'cens' (AES-CTR subsample), 'cbcs' (AES-CBC subsample).
       * </pre>
       *
       * <code>uint32 protection_scheme = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearProtectionScheme() {
        copyOnWrite();
        instance.clearProtectionScheme();
        return this;
      }

      /**
       * <pre>
       * Optional. For media using key rotation, this represents the duration
       * of each crypto period in seconds.
       * </pre>
       *
       * <code>uint32 crypto_period_seconds = 10;</code>
       * @return The cryptoPeriodSeconds.
       */
      @java.lang.Override
      public int getCryptoPeriodSeconds() {
        return instance.getCryptoPeriodSeconds();
      }
      /**
       * <pre>
       * Optional. For media using key rotation, this represents the duration
       * of each crypto period in seconds.
       * </pre>
       *
       * <code>uint32 crypto_period_seconds = 10;</code>
       * @param value The cryptoPeriodSeconds to set.
       * @return This builder for chaining.
       */
      public Builder setCryptoPeriodSeconds(int value) {
        copyOnWrite();
        instance.setCryptoPeriodSeconds(value);
        return this;
      }
      /**
       * <pre>
       * Optional. For media using key rotation, this represents the duration
       * of each crypto period in seconds.
       * </pre>
       *
       * <code>uint32 crypto_period_seconds = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearCryptoPeriodSeconds() {
        copyOnWrite();
        instance.clearCryptoPeriodSeconds();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:WidevineCencHeader)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.google.android.exoplayer2.endeavor.WidevineCencHeaderParser.WidevineCencHeader();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "algorithm_",
              "keyId_",
              "provider_",
              "contentId_",
              "trackTypeDeprecated_",
              "policy_",
              "cryptoPeriodIndex_",
              "groupedLicense_",
              "protectionScheme_",
              "cryptoPeriodSeconds_",
            };
            java.lang.String info =
                "\u0000\n\u0000\u0000\u0001\n\n\u0000\u0001\u0000\u0001\f\u0002\u001c\u0003\u0208" +
                "\u0004\n\u0005\u0208\u0006\u0208\u0007\u000b\b\n\t\u000b\n\u000b";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<com.google.android.exoplayer2.endeavor.WidevineCencHeaderParser.WidevineCencHeader> parser = PARSER;
          if (parser == null) {
            synchronized (com.google.android.exoplayer2.endeavor.WidevineCencHeaderParser.WidevineCencHeader.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<com.google.android.exoplayer2.endeavor.WidevineCencHeaderParser.WidevineCencHeader>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:WidevineCencHeader)
    private static final com.google.android.exoplayer2.endeavor.WidevineCencHeaderParser.WidevineCencHeader DEFAULT_INSTANCE;
    static {
      WidevineCencHeader defaultInstance = new WidevineCencHeader();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        WidevineCencHeader.class, defaultInstance);
    }

    public static com.google.android.exoplayer2.endeavor.WidevineCencHeaderParser.WidevineCencHeader getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<WidevineCencHeader> PARSER;

    public static com.google.protobuf.Parser<WidevineCencHeader> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
